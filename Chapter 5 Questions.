6)
If the name of the main method in the MovingDisk class is mistyped with a capital M, the interpreter will signal an exception:
Exception in thread "main" java.lang.NoSuchMethodError: main

7)
Because the if statement only has one condition, the braces are a matter of style and readibility. In contrast, the semi-colon 
is required by Java syntax because it signals the end of that statement. 

8)
The applet compiles with no errors because the extra semicolon does not cause a syntax error in the code. The message is not moving
across the screen because the semicolon effectively terminates the if statement by not including its result if the condition holds
true. This means that the horizontal position of the banner won't be adjusted, so the banner won't move across the screen. 

9)
public boolean badIndentation(int maxLines)
{
  int lineCount = 3;
  while (lineCount < maxLines)
  {
    System.out.println(lineCount);
    lineCount++;
  }
  return true;
}

11)
a) 
If we comment out the statement "super("GUI Demo");," the title bar on the Applet window becomes empty, so it doesn't display 
"GUI Demo" on the top of the box. The absence of the title can be explained by the fact that the constructor is not called upon because it is commented out.
The program still runs.

(b) If we modify the constructors, the program compiles, althouth the window is empty.
This can be explained by the fact that the HelloGui() method is no longer treated as a constructor, so the default constructor 
is used instead. 
The String that is supposed to appear takes on a null value, meaning that the window is empty. 


12) a)
line 21 - missing "t" in the "set" of seBackground
Correct: c.setBackground(Color.WHITE);

line 26 - missing "()" after the second Morning in the declaration of the morning variable 
Correct: Morning morning = new Morning();

line 17 - missing quotation mark after roost.wav
Correct: rooster = new EasySound("roost.wav");

12 b) 

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class Morning extends JFrame
implements ActionListener
{
  private EasySound rooster;
  private int time; 
  
  public Morning()
  {
    super("Morning");
    rooster = new EasySound("roost.wav");
    
    Container c = getContentPane();
    c.setBackground(Color.WHITE); //background is set to white
    
    time = 0;
    Timer clock = new Timer(5000, this); //rooster.wav repeats every five seconds
    clock.start();
  }
  public void actionPerformed(ActionEvent e) 
  {
    time++;
    rooster.play();
    repaint();
  }

  public static void main(String[] args)
  {
    Morning morning = new Morning();
    morning.setSize(300, 150);
    morning.setDefaultCloseOperation(EXIT_ON_CLOSE);
    morning.setVisible(true);
  }
}  


12 c)

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;


public class Morning extends JFrame
implements ActionListener
{
  private EasySound rooster;
  private EasySound cow;
  private int time;
  
  public Morning()
  {
    super("Morning");
    rooster = new EasySound("roost.wav"); // declares the variable rooster and associates roost.wav with it
    cow = new EasySound("moo.wav"); //declares the variable mow and associates moo.wav with it

    Container c = getContentPane();
    c.setBackground(Color.WHITE);
    
    time = 0;
    Timer clock = new Timer(5000, this); 
    clock.start();
  }
  public void actionPerformed(ActionEvent e)
  {
    time++;
    if(time%2==0)
    {
      rooster.play(); //sets roost.wav to play if the time  is even
      Container d = getContentPane(); 
      d.setBackground(Color.WHITE); //changes the background to black every five seconds
    }
    else 
    {
      cow.play(); //sets moo.wav to play if the time is odd
      Container f = getContentPane(); //alternates the program between
      f.setBackground(Color.BLACK); //changes the background to white every five seconds
    }
    
  }

  public static void main(String[] args)
  {
    Morning morning = new Morning();
    morning.setSize(300, 150);
    morning.setDefaultCloseOperation(EXIT_ON_CLOSE);
    morning.setVisible(true);
  }
}  

